<style>
  @import url("https://fonts.googleapis.com/css2?family=Birthstone&display=swap");
</style>

<nav class="fixed top-0 left-0 w-full z-50 bg-[#E4E0E1] shadow-md">
  <div class="container mx-auto flex items-center justify-around p-4">
    <a href="#home" class="text-[40px] font-bold font-['Birthstone']">Faprin</a>

    <div class="flex items-center gap-14">
      <a
        href="#home"
        class="hover:scale-110 transform transition duration-200 ease-in-out"
        >Inicio</a
      >
      <a
        href="#projects"
        class="hover:scale-110 transform transition duration-200 ease-in-out"
        >Proyectos</a
      >
      <a
        href="#about"
        class="hover:scale-110 transform transition duration-200 ease-in-out"
        >¿Quién soy?</a
      >
      <a
        href="#"
        class="hover:scale-110 transform transition duration-200 ease-in-out"
        >Contacto</a
      >
    </div>
  </div>
</nav>

<main class="max-w-[60%] mx-auto">
  <section id="home" class="h-screen flex justify-center items-center">
    <div class="grid grid-cols-2 h-[240px]">
      <!-- TEXTO REACTIVO -->
      <div class="h-full mr-10 flex justify-end gap-10">
        <h3 id="nombre" class="text-6xl font-bold text-right">
          Jose Manuel<br /> Domínguez <br /> Segura
        </h3>
        <div class="bg-[#493628] w-1 h-full"></div>
      </div>

      <!-- TEXTO DE BIENVENIDA -->
      <div class="">
        <div class="flex justify-between items-center text-3xl">
          <div class="flex gap-2 items-center">
            <h4 class="font-bold italic">¡Hola!</h4>
            <span class="icon-[line-md--emoji-smile-wink]"></span>
          </div>

          <div class="flex gap-2 items-center">
            <a
              href="https://github.com/Faprin"
              target="_blank"
              rel="noopener noreferrer"
            >
              <span class="icon-[line-md--github-loop]"></span></a
            >
            <a
              href="https://www.linkedin.com/in/jose-manuel-dom%C3%ADnguez-segura-9b779b312/"
              target="_blank"
              rel="noopener noreferrer"
            >
              <span class="icon-[line-md--linkedin]"></span>
            </a>
          </div>
        </div>
        <br />
        <p>
          ¡Bienvenido a mi portfolio! Soy estudiante de Ingeniería Informática,
          especializándome en software backend. Aquí muestro proyectos que
          reflejan mi pasión por desarrollar sistemas eficientes, escalables y
          de calidad. Explora mi trabajo y descubre cómo abordo retos
          tecnológicos.
        </p>
      </div>
    </div>
  </section>

  <!-- Proyectos -->
  <section id="projects" class="min-h-screen">
    <!-- Titulo del apartado -->
    <div class="text-center pt-36">
      <h3 class="font-bold text-4xl">Proyectos</h3>
      <p>
        *Todos los proyectos que se exponen esta página se encuentran subidos a
        GitHub
      </p>
    </div>

    <!-- Contenedor de proyectos -->
     <div id="project-cont" class="flex flex-col gap-10 pt-7 transition-all duration-1000"></div>
    
  </section>

  <section id="about" class="min-h-screen">
    <div class="pt-36">
      <h3 class="font-bold text-4xl">¿Quién soy?</h3>
    </div>
  </section>
</main>

<script>
  const projectsTitle = ["N-Queens Solver", "Problema del viajante", "Simulador de colisiones"];
  const projectsDescriptions = [
    "Este proyecto resuelve el problema de las N-Reinas utilizando una interfaz gráfica construida con JavaFX. El programa permite al usuario introducir el número de filas, columnas y reinas a través de la interfaz, y genera una solución utilizando el algoritmo de backtracking.",
    "Programa en lenguaje Java con el que podamos resolver el famoso problema del viajante. Para ello, empleamos distintas estrategias algorítmicas y realizamos un estudio de cada uno de los algoritmos usados, verificando cuál resulta más eficiente y gasta menos tiempo computacional.",
    "Es un simulador de colisiones desarrollado en JavaScript. Su objetivo es proporcionar una representación visual y dinámica de cómo los objetos interactúan entre sí durante una colisión, utilizando principios básicos de física",
  ];
  const projectsLinks = ["https://github.com/Faprin/n-Queens", "https://github.com/Faprin/Practica2_AMC", "https://github.com/Mininh1206/collision-simulator"];
  const projectsImages = ["/tablero.webp", "/viajante.webp", "image 3"];
  const altImg = ["tablero", "viajante", "collision"];
  
  function generateProjects() {
    const content = document.getElementById("project-cont");
    content.innerHTML = ""; // Asegura que esté vacío antes de agregar proyectos
    
    projectsTitle.forEach((title, index) => {
      const isEven = index % 2 === 0;
      
      const projectHTML = `
      <div class="grid grid-cols-2 mx-20 opacity-0 translate-y-10 transition-all duration-700">
        ${isEven 
          ? `<div id="column-1" class="flex flex-col ml-auto text-end pr-10">
              <a href="${projectsLinks[index]}" target="_blank" rel="noopener noreferrer">
                <h3 class="font-bold text-2xl">${title}</h3>
              </a>
              <p>${projectsDescriptions[index]}</p>
            </div>
            <div id="column-2" class="flex">
              <div class="bg-[#493628] w-1 h-full mr-10"></div>
              <img class="max-w-[50%]" src="${projectsImages[index]}" alt="${altImg[index]}" />
            </div>`
          : `<div id="column-1" class="flex justify-end mr-10">
              <img class="max-w-[50%]" src="${projectsImages[index]}" alt="${altImg[index]}" />
            </div>
            <div class="flex">
              <div class="bg-[#493628] w-1 h-full mr-10"></div>
              <div id="column-2" class="flex flex-col text-start">
                <a href="${projectsLinks[index]}" target="_blank" rel="noopener noreferrer">
                  <h3 class="font-bold text-2xl">${title}</h3>
                </a>  
                <p>${projectsDescriptions[index]}</p>
              </div>
            </div>`
        }
      </div>`;

      content.innerHTML += projectHTML;
    });

    applyIntersectionObserver();
  }

  function applyIntersectionObserver() {
    const projectItems = document.querySelectorAll("#project-cont > div"); // Selecciona cada proyecto

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry, index) => {
          if (entry.isIntersecting) {
            setTimeout(() => {
              entry.target.classList.add("opacity-100", "translate-y-0");
            }, index * 200); 
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.2 }
    );

    projectItems.forEach((item) => observer.observe(item));
  }

  document.addEventListener("DOMContentLoaded", () => {
    generateProjects();
  });


  const nombre = document.getElementById("nombre");

  const nombres = [
    "Jose Manuel Domínguez Segura",
    "Ingeniero De Software",
    "Desarrollador Full Stack",
  ];

  let index = 0; // Índice inicial para el array de nombres

  function changeName() {
    if (nombre != null) {
      nombre.innerHTML = "";

      const currentName = nombres[index];
      const words = currentName.split(" ");

      let letterIndex = 0;
      let wordIndex = 0;

      function printLetter() {
        if (nombre != null) {
          // mientras que no haya terminado una palabra, imprimo sus letras
          if (letterIndex < words[wordIndex].length) {
            // mientras que la letra que quiero escribir sea menor al largo de la palabra
            nombre.innerHTML += words[wordIndex][letterIndex]; // imprimo la letra
            letterIndex++; // aumento la letra
            setTimeout(printLetter, 100);
          } else {
            // añado un salto de linea
            nombre.innerHTML += "<br>";

            wordIndex++;
            letterIndex = 0;

            if (wordIndex < words.length) {
              setTimeout(printLetter, 100);
            } else {
              // acabo una palabra
              index = (index + 1) % nombres.length;
              setTimeout(changeName, 1500);
            }
          }
        }
      }
      printLetter();
    }
  }

  changeName();
</script>
